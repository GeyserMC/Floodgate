import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'java'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
    accessWidener = file("src/main/resources/floodgate.accesswidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // Base Floodgate
    implementation("org.geysermc.floodgate:common:${project.mod_version}")
    shadow("org.geysermc.floodgate:common:${project.mod_version}") {
        exclude group: 'com.google.guava', module: "guava"
        exclude group: 'com.google.code.gson', module: "gson"
        exclude group: 'org.slf4j', module: "slf4j-api"
        exclude group: 'net.kyori', module: '*' // Let Adventure-Platform provide its desired Adventure version
    }

    include(modImplementation('cloud.commandframework:cloud-fabric:1.5.0') {
        because "Commands library implementation for Fabric"
    })

    include(modImplementation('net.kyori:adventure-platform-fabric:5.2.0') {
        because "Chat library implementation for Fabric that includes methods for communicating with the server"
        // Thanks to zml for this fix
        // The package modifies Brigadier which causes a LinkageError at runtime if included
        exclude group: 'ca.stellardrift', module: "colonel"
    })

    // Lombok
    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
}

repositories {
    //mavenLocal()
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    // Standard OpenCollab repositories
    maven {
        name = 'opencollab-release-repo'
        url = 'https://repo.opencollab.dev/maven-releases/'
        //TODO set as releases
    }
    maven {
        name = 'opencollab-snapshot-repo'
        url = 'https://repo.opencollab.dev/maven-snapshots/'
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
//    dependencies {
//        exclude('net.fabricmc:.*')
//        //include(dependency('org.geysermc.floodgate:.*'))
//        //include(dependency("org.geysermc.cumulus:.*"))
//        //include(dependency('org.geysermc:.*'))
//        exclude '/mappings/*'
//    }
    configurations = [project.configurations.shadow]
    //dependencies {
        //exclude(dependency('cloud.commandframework:cloud-fabric:.*'))
        //exclude(dependency('net.kyori:adventure-platform-fabric:.*'))
    //}

    //relocate 'net.kyori', 'org.geysermc.floodgate.relocations.kyori'
    //relocate 'cloud.commandframework', 'org.geysermc.floodgate.relocations.cloud'
    relocate 'it.unimi.dsi.fastutil', 'org.geysermc.floodgate.relocations.fastutil'
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn tasks.shadowJar
    input = tasks.shadowJar.archivePath
    addNestedDependencies = true
    remapAccessWidener = true // Required for our access widener changes to go into effect and not crash on startup
    archiveName = "floodgate-fabric.jar"
}

tasks.assemble.dependsOn tasks.remappedShadowJar

artifacts {
    archives remappedShadowJar
    shadow shadowJar
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
