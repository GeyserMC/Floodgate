[versions]
# parent
micronaut-gradle = "4.3.2"
lombok = "8.4"

# api
cumulus = "2.0.0-SNAPSHOT"
events = "1.2-SNAPSHOT"
netty = "4.1.49.Final"
gson = "2.8.5"

# core
base-api = "feature-floodgate-merge-1.1.0-SNAPSHOT"
configurate = "4.2.0-GeyserMC-SNAPSHOT"
database-utils = "1.0-SNAPSHOT"
fastutil = "8.5.3"
cloud = "2.0.0-beta.2"
snakeyaml = "2.0"
bstats = "3.0.2"
adventure = "4.16.0"
adventure-platform = "4.3.2"

# bungee
bungee = "1.20-R0.3-SNAPSHOT"

# spigot
paper = "1.20.2-R0.1-SNAPSHOT"
authlib = "5.0.47"

# velocity
velocity = "3.3.0-SNAPSHOT"

# buildSrc
indra = "3.1.3"
shadow = "8.1.1"
gradle-idea-ext = "1.1.7"
checkerframework = "3.42.0"

[libraries]
# indirectly included
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
slf4j = { module = "org.slf4j:slf4j-api" }

# api
cumulus = { module = "org.geysermc.cumulus:cumulus", version.ref = "cumulus" }
events = { module = "org.geysermc.event:events", version.ref = "events" }
netty-transport = { module = "io.netty:netty-transport", version.ref = "netty" }

# core
base-api = { module = "org.geysermc.api:base-api", version.ref = "base-api" }
configurate-interface-ap = { module = "org.spongepowered:configurate-extra-interface-ap", version.ref = "configurate" }
configurate-interface = { module = "org.spongepowered:configurate-extra-interface", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
database-utils = { module = "org.geysermc.databaseutils:core", version.ref = "database-utils" }
database-utils-sql = { module = "org.geysermc.databaseutils:database-sql", version.ref = "database-utils" }
database-utils-mongo = { module = "org.geysermc.databaseutils:database-mongo", version.ref = "database-utils" }
database-utils-ap = { module = "org.geysermc.databaseutils:ap", version.ref = "database-utils" }
fastutil-short-object-maps = { module = "com.nukkitx.fastutil:fastutil-short-object-maps", version.ref = "fastutil" }
fastutil-int-object-maps = { module = "com.nukkitx.fastutil:fastutil-int-object-maps", version.ref = "fastutil" }
cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
bstats = { module = "org.bstats:bstats-base", version.ref = "bstats" }

adventure-text-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-platform-bukkit = { module = "net.kyori:adventure-platform-bukkit", version.ref = "adventure-platform"}
adventure-platform-bungee = { module = "net.kyori:adventure-platform-bungeecord", version.ref = "adventure-platform"}

micronaut-inject = { module = "io.micronaut:micronaut-inject" }
micronaut-inject-java = { module = "io.micronaut:micronaut-inject-java" }
micronaut-context = { module = "io.micronaut:micronaut-context" }
micronaut-http-client = { module = "io.micronaut:micronaut-http-client-jdk" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation" }
micronaut-validation-processor = { module = "io.micronaut.validation:micronaut-validation-processor" }

micronaut-serde-jsonp = { module = "io.micronaut.serde:micronaut-serde-jsonp" }
micronaut-serde-processor = { module = "io.micronaut.serde:micronaut-serde-processor" }
jakarta-jsonb = { module = "jakarta.json.bind:jakarta.json.bind-api" }

netty-codec = { module = "io.netty:netty-codec", version.ref = "netty" }

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

# bungee
bungee = { module = "net.md-5:bungeecord-proxy", version.ref = "bungee" }
cloud-bungee = { module = "org.incendo:cloud-bungee", version.ref = "cloud" }

# spigot
paper-api = { module = "io.papermc.paper:paper-api", version.ref = "paper" }
cloud-paper = { module = "org.incendo:cloud-paper", version.ref = "cloud" }
authlib = { module = "com.mojang:authlib", version.ref = "authlib" }

# velocity
cloud-velocity = { module = "org.incendo:cloud-velocity", version.ref = "cloud" }
velocity-api = { module = "com.velocitypowered:velocity-api", version.ref = "velocity" }
velocity-proxy = { module = "com.velocitypowered:velocity-proxy", version.ref = "velocity" }

# buildSrc
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checkerframework" }
# plugins
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-git = { module = "net.kyori:indra-git", version.ref = "indra" }
shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
gradle-idea-ext = { module = "gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext", version.ref = "gradle-idea-ext" }

[plugins]
micronaut = { id = "io.micronaut.library", version.ref = "micronaut-gradle" }
lombok = { id = "io.freefair.lombok", version.ref = "lombok" }

[bundles]
fastutil = ["fastutil-short-object-maps", "fastutil-int-object-maps"]