[versions]
# parent
micronaut-gradle = "4.1.1"
lombok = "8.0.1"

# api
cumulus = "2.0.0-SNAPSHOT"
events = "1.2-SNAPSHOT"
netty = "4.1.49.Final"
gson = "2.8.5"

# core
base-api = "feature-floodgate-merge-1.1.0-SNAPSHOT"
config-utils = "development-2.0-SNAPSHOT"
fastutil = "8.5.3"
java-websocket = "1.5.2"
cloud = "1.8.3"
snakeyaml = "2.0"
bstats = "3.0.2"
jakarta-persistence = "3.1.0"

# bungee
bungee = "master-SNAPSHOT"

# spigot
paper = "1.20.2-R0.1-SNAPSHOT"
authlib = "5.0.47"

# velocity
velocity = "3.2.0-SNAPSHOT"

# fabric
fabric_minecraft = "1.20.2"
fabric_loader = "0.14.20"
fabric_api = "0.90.7+1.20.2"
fabric_adventure = "5.4.0-SNAPSHOT"
fabric_permissions_api = "0.2-SNAPSHOT"

# forge

# mod common
mixin = "0.8.5"

# architectury
architectury_plugin = "3.4-SNAPSHOT"
architectury_loom = "1.4-SNAPSHOT"

# buildSrc
indra = "3.1.3"
shadow = "8.1.1"
gradle-idea-ext = "1.1.7"
checkerframework = "3.19.0"

[libraries]
# indirectly included
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
slf4j = { module = "org.slf4j:slf4j-api" }

# api
cumulus = { module = "org.geysermc.cumulus:cumulus", version.ref = "cumulus" }
events = { module = "org.geysermc.event:events", version.ref = "events" }
netty-transport = { module = "io.netty:netty-transport", version.ref = "netty" }

# core
base-api = { module = "org.geysermc.api:base-api", version.ref = "base-api" }
config-utils = { module = "org.geysermc.configutils:core", version.ref = "config-utils" }
config-utils-ap = { module = "org.geysermc.configutils:ap", version.ref = "config-utils" }
fastutil-short-object-maps = { module = "com.nukkitx.fastutil:fastutil-short-object-maps", version.ref = "fastutil" }
fastutil-int-object-maps = { module = "com.nukkitx.fastutil:fastutil-int-object-maps", version.ref = "fastutil" }
java-websocket = { module = "org.java-websocket:Java-WebSocket", version.ref = "java-websocket" }
cloud-core = { module = "cloud.commandframework:cloud-core", version.ref = "cloud" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
bstats = { module = "org.bstats:bstats-base", version.ref = "bstats" }

micronaut-inject = { module = "io.micronaut:micronaut-inject" }
micronaut-inject-java = { module = "io.micronaut:micronaut-inject-java" }
micronaut-context = { module = "io.micronaut:micronaut-context" }
micronaut-http-client = { module = "io.micronaut:micronaut-http-client-jdk" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation" }
micronaut-validation-processor = { module = "io.micronaut.validation:micronaut-validation-processor" }
micronaut-data-processor = { module = "io.micronaut.data:micronaut-data-processor" }
micronaut-data-jdbc = { module = "io.micronaut.data:micronaut-data-jdbc" }
micronaut-hikari = { module = "io.micronaut.sql:micronaut-jdbc-hikari" }
jakarta-persistence = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }

micronaut-serde-jsonp = { module = "io.micronaut.serde:micronaut-serde-jsonp" }
micronaut-serde-processor = { module = "io.micronaut.serde:micronaut-serde-processor" }
jakarta-jsonb = { module = "jakarta.json.bind:jakarta.json.bind-api" }

netty-codec = { module = "io.netty:netty-codec", version.ref = "netty" }

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

# database types
h2 = { module = "com.h2database:h2" }

# bungee
bungee = { module = "com.github.SpigotMC.BungeeCord:bungeecord-proxy", version.ref = "bungee" }
cloud-bungee = { module = "cloud.commandframework:cloud-bungee", version.ref = "cloud" }

# spigot
paper-api = { module = "io.papermc.paper:paper-api", version.ref = "paper" }
cloud-bukkit = { module = "cloud.commandframework:cloud-bukkit", version.ref = "cloud" }
authlib = { module = "com.mojang:authlib", version.ref = "authlib" }

# velocity
cloud-velocity = { module = "cloud.commandframework:cloud-velocity", version.ref = "cloud" }
velocity-api = { module = "com.velocitypowered:velocity-api", version.ref = "velocity" }

# fabric
# check these on https://modmuss50.me/fabric.html
fabric-minecraft = { group = "com.mojang", name = "minecraft", version.ref = "fabric_minecraft" }
fabric-loader = { group = "net.fabricmc", name = "fabric-loader", version.ref = "fabric_loader" }
fabric-api = { group = "net.fabricmc.fabric-api", name = "fabric-api", version.ref = "fabric_api" }
cloud-fabric = { module = "cloud.commandframework:cloud-fabric", version.ref = "cloud" }
kyori-adventure = { module = "net.kyori:adventure-platform-fabric", version.ref = "fabric_adventure" }
fabric-permissions-api = { module = "me.lucko:fabric-permissions-api", version.ref = "fabric_permissions_api" }

# forge TODO

# mod common
mixin = { group = "org.spongepowered", name = "mixin", version.ref = "mixin" }

# buildSrc
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checkerframework" }

# plugins
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-git = { module = "net.kyori:indra-git", version.ref = "indra" }
shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
gradle-idea-ext = { module = "gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext", version.ref = "gradle-idea-ext" }
architectury-loom = { group = "dev.architectury.loom", name = "dev.architectury.loom.gradle.plugin", version.ref = "architectury_loom" }
architectury-plugin = { group = "architectury-plugin", name = "architectury-plugin.gradle.plugin", version.ref = "architectury_plugin" }

[plugins]
micronaut = { id = "io.micronaut.library", version.ref = "micronaut-gradle" }
lombok = { id = "io.freefair.lombok", version.ref = "lombok" }

[bundles]
fastutil = ["fastutil-short-object-maps", "fastutil-int-object-maps"]